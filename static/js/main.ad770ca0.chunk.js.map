{"version":3,"sources":["reportWebVitals.js","assets/example.md","components/MarkdownEditor.js","components/Header.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","components","code","inline","className","children","props","match","exec","style","docco","language","PreTag","String","replace","MardownEditor","useState","markdown","setMarkdown","useEffect","fetch","exampleMarkdown","response","text","data","value","autoFocus","onChange","e","target","rehypePlugins","rehypeRaw","rehypeKatex","remarkPlugins","gfm","remarkMath","Header","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sICPC,G,cAAA,IAA0B,oC,2CCcnCQ,EAAa,CACjBC,KADiB,YAC8B,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,SAAaC,EAAQ,iBACtCC,EAAQ,iBAAiBC,KAAKJ,GAAa,IACjD,OAAQD,GAAUI,EAChB,cAAC,IAAD,aACEE,MAAOC,IACPC,SAAUJ,EAAM,GAChBK,OAAO,MACPP,SAAUQ,OAAOR,GAAUS,QAAQ,MAAO,KACtCR,IAGN,8CAAMF,UAAWA,GAAeE,GAAhC,aACGD,OAyCMU,MAnCf,WACE,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OARAC,qBAAU,WACRC,MAAMC,GACH1B,MAAK,SAAC2B,GAAD,OAAcA,EAASC,UAC5B5B,MAAK,SAAC6B,GACLN,EAAYM,QAEf,IAGD,qCACE,sBAAKpB,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,sBACA,0BACEA,UAAU,WACVqB,MAAOR,EACPS,WAAS,EACTC,SAAU,SAACC,GAAD,OAAOV,EAAYU,EAAEC,OAAOJ,aAG1C,sBAAKrB,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,qBACA,cAAC,IAAD,CACEA,UAAU,WACV0B,cAAe,CAACC,IAAWC,KAC3BC,cAAe,CAACC,IAAKC,KACrB9B,SAAUY,EACVhB,WAAYA,W,kBCzCPmC,MAff,WACE,OACE,sBAAKhC,UAAU,SAAf,UACE,oBAAIA,UAAU,cAAd,6BACA,oBACEA,UAAU,aACViC,KAAK,mDACLR,OAAO,SACPS,IAAI,sBAJN,4BAKiB,cAAC,IAAD,W,OCGRC,MAXf,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,U,OCHRoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpD,M","file":"static/js/main.ad770ca0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/example.df6eef62.md\";","import {useState, useEffect} from 'react';\n\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport {docco} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport gfm from 'remark-gfm';\nimport rehypeRaw from 'rehype-raw';\nimport remarkMath from 'remark-math';\nimport rehypeKatex from 'rehype-katex';\nimport 'katex/dist/katex.min.css';\n\nimport './MarkdownEditor.css';\nimport exampleMarkdown from '../assets/example.md';\n\nconst components = {\n  code({inline, className, children, ...props}) {\n    const match = /language-(\\w+)/.exec(className || '');\n    return !inline && match ? (\n      <SyntaxHighlighter\n        style={docco}\n        language={match[1]}\n        PreTag=\"div\"\n        children={String(children).replace(/\\n$/, '')}\n        {...props}\n      />\n    ) : (\n      <code className={className} {...props}>\n        {children}\n      </code>\n    );\n  },\n};\n\nfunction MardownEditor() {\n  const [markdown, setMarkdown] = useState();\n  useEffect(() => {\n    fetch(exampleMarkdown)\n      .then((response) => response.text())\n      .then((data) => {\n        setMarkdown(data);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"contain\">\n        <div className=\"headerMD\">MARKDOWN</div>\n        <textarea\n          className=\"textarea\"\n          value={markdown}\n          autoFocus\n          onChange={(e) => setMarkdown(e.target.value)}></textarea>\n      </div>\n\n      <div className=\"contain\">\n        <div className=\"headerMD\">PREVIEW</div>\n        <ReactMarkdown\n          className=\"markdown\"\n          rehypePlugins={[rehypeRaw, rehypeKatex]}\n          remarkPlugins={[gfm, remarkMath]}\n          children={markdown}\n          components={components}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default MardownEditor;\n","import React from 'react';\n\nimport './Header.css';\nimport {GoMarkGithub} from 'react-icons/go';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"headerTitle\">Markdown editor</h1>\n      <a\n        className=\"linkGithub\"\n        href=\"https://github.com/alexjcm/react-markdown-editor\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        View on Github <GoMarkGithub />\n      </a>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport MarkdownEditor from './components/MarkdownEditor';\nimport Header from './components/Header';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"markdownEditor\">\n        <MarkdownEditor />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}